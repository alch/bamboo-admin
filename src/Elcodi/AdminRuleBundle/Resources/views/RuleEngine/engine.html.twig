{% extends 'AdminCoreBundle::layout.html.twig' %}


{% block content_title %}
    {{ 'Rule Engine'|trans }}
{% endblock content_title %}


{% block content %}

    <form action="{{ url("admin_rule_engine_submit") }}" method="post">
        <input type="text" name="code" placeholder="code: ORDER15">
        <input type="text" name="name" placeholder="name">
        <div class="comparation" data-index="0" >

            <span class="comparated">
                <select data-index="0" name="comparation[0][comparated][0]">
                    <option value=""></option>
                    {% for elementName, elementNamespace in context %}
                        <option
                                data-association="true"
                                data-type="{{ elementNamespace }}"
                                value="{{ elementName }}">
                            {{ elementName }}
                        </option>
                    {% endfor %}
                </select>
            </span>

            <span class="comparator">
                <select name="comparation[0][comparator]" class="hidden sw-r sw-r-all sw-r-n-collection">
                    <option class="" value=""></option>
                    <option disabled="disabled" class="hidden sw-r sw-r-integer sw-r-datetime" value=">">Bigger than</option>
                    <option disabled="disabled" class="hidden sw-r sw-r-integer sw-r-datetime" value=">=">Bigger or equal than</option>
                    <option disabled="disabled" class="hidden sw-r sw-r-all" value="==">Equals than</option>
                    <option disabled="disabled" class="hidden sw-r sw-r-all" value="==">Identical than</option>
                    <option disabled="disabled" class="hidden sw-r sw-r-all sw-r-n-boolean" value="matches">Matches</option>
                    <option disabled="disabled" class="hidden sw-r sw-r-all sw-r-n-boolean" value="in">In</option>
                    <option disabled="disabled" class="hidden sw-r sw-r-all sw-r-n-boolean" value="not in">Not in</option>
                    <option disabled="disabled" class="hidden sw-r sw-r-all" value="!=">Not equal than</option>
                    <option disabled="disabled" class="hidden sw-r sw-r-all" value="!==">Not identical than</option>
                    <option disabled="disabled" class="hidden sw-r sw-r-integer sw-r-datetime" value="<=">Smaller or equal than</option>
                    <option disabled="disabled" class="hidden sw-r sw-r-integer sw-r-datetime" value="<">Smaller than</option>
                </select>
            </span>

            <span class="comparable">
                <input disabled="disabled" class="hidden sw-r sw-r-all sw-r-n-text sw-r-n-boolean sw-r-n-collection" name="comparation[0][comparable]" />
                <textarea disabled="disabled" class="hidden sw-r sw-r-text sw-r-n-collection" name="comparation[0][comparable]" ></textarea>
                <select disabled="disabled" class="hidden sw-r sw-r-boolean sw-r-n-collection" name="comparation[0][comparable]">
                    <option value="true">true</option>
                    <option value="false">false</option>
                </select>
            </span>

        </div>

        <input type="submit">
    </form>

    <script type="text/javascript">

        $(document).ready(function () {

            $('.comparation').on('change', '.comparated select', function () {

                var $this = $(this);
                $this.nextAll().remove();
                var $option = $this.find('option:selected');
                var value = $option.val();

                if (value == '') {

                    return;
                }

                var isAssociation = $option.data('association');
                var type = $option.data('type');

                if (isAssociation) {

                    var comparationIndex = parseInt($this.closest('.comparation').data('index'));
                    var index = parseInt($this.data('index')) + 1;

                    showComparisionFields(
                        $this.closest('.comparation'),
                        ''
                    );

                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        url: "/rule/engine/api/" + encodeURI(type),
                        success: function (data) {

                            var selector = '<select name="comparation[' + comparationIndex + '][comparated][' + index + ']"';
                            selector += '<option value=""></option>';

                            $.each(data.fields, function (field, fieldData) {

                                selector += '<option data-association="false"';
                                selector += ' data-type="' + fieldData.type + '"';
                                selector += ' value="' + fieldData.fieldName + '">';
                                selector += field;
                                selector += '</option>';
                            });

                            $.each(data.associations, function (association, associationData) {

                                var associationName = associationData.collection
                                        ? associationData.name + '.length'
                                        : associationData.name;

                                var associationType = associationData.collection
                                        ? 'integer'
                                        : associationData.namespace;

                                selector += '<option data-association="' + !associationData.collection + '"';
                                selector += ' data-type="' + associationType+ '"';
                                selector += ' value="' + associationName + '">';
                                selector += associationName;
                                selector += '</option>';
                            });

                            selector += '</select>';

                            $this.after(selector);
                        }
                    });

                } else {

                    showComparisionFields(
                        $this.closest('.comparation'),
                        type
                    );
                }
            });
        });

        /**
         * Given a comparation block, hide and show specific fields given the
         * field type
         *
         * @param comparationBlock
         * @param fieldType
         */
        function showComparisionFields(comparationBlock, fieldType) {

            var $switchables = comparationBlock.find('.sw-r');

            $switchables.attr('disabled', true);
            $switchables.addClass('hidden');

            $switchables
                .filter(function () {
                    var $this = $(this);

                    if (fieldType == '') {

                        return false;
                    }

                    return ($this.hasClass('sw-r-' + fieldType) ||
                        $this.hasClass('sw-r-all')) &&
                        !$this.hasClass('sw-r-n-' + fieldType);
                })
                .removeAttr('disabled')
                .removeClass('hidden');

            comparationBlock.find('.comparator select').val('');
        }

    </script>

{% endblock content %}
